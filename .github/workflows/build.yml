name: Quality Data Consolidation (Node.js)

on:
  push:
    branches: [main]
  pull_request:
    branches: [main]
  schedule:
    - cron: '0 2 * * *'
  workflow_dispatch:

env:
  BUILD_NUMBER: ${{ github.run_number }}
  GITHUB_REPOSITORY: ${{ github.repository }}
  GITHUB_SHA: ${{ github.sha }}

jobs:
  quality-analysis:
    name: Complete Quality Pipeline - Node.js
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'

      - name: Install Dependencies
        run: npm ci

      - name: Run Tests and Collect Coverage
        run: |
          mkdir -p test-results
          npm run test:ci || echo "❌ Tests failed but continuing for reporting"

      - name: SonarQube Analysis
        env:
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
          SONAR_HOST_URL: ${{ secrets.SONAR_HOST_URL }}
        run: |
          npm install -g sonar-scanner
          sonar-scanner \
            -Dsonar.projectKey=sonarqube-testing \
            -Dsonar.sources=src \
            -Dsonar.tests=test \
            -Dsonar.javascript.lcov.reportPaths=coverage/lcov.info \
            -Dsonar.host.url=$SONAR_HOST_URL \
            -Dsonar.login=$SONAR_TOKEN \
            -Dsonar.qualitygate.wait=true

      - name: Phase 5 - Generate Reports (CSV, MD, HTML)
        if: always()
        env:
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
          SONAR_HOST_URL: ${{ secrets.SONAR_HOST_URL }}
        run: |
          mkdir -p reports/exports reports/team-dashboard
          TIMESTAMP=$(date -u +"%Y%m%d_%H%M%S")
          PROJECT_KEY="sonarqube-testing"

          echo "📡 Pulling metrics from SonarQube API..."
          METRICS=$(curl -s -u "$SONAR_TOKEN:" "$SONAR_HOST_URL/api/measures/component?component=$PROJECT_KEY&metricKeys=ncloc,coverage,bugs,vulnerabilities,code_smells,duplicated_lines_density")

          echo "📄 Writing metrics to CSV..."
          CSV_FILE=reports/exports/quality_metrics_export_${TIMESTAMP}.csv
          echo "Date,Project,Bugs,Vulnerabilities,Coverage,CodeSmells,Duplication,LinesOfCode" > "$CSV_FILE"
          echo -n "$(date -u),$PROJECT_KEY," >> "$CSV_FILE"
          echo "$METRICS" | jq -r '
            [.component.measures[] | select(.metric=="bugs") .value,
             .component.measures[] | select(.metric=="vulnerabilities") .value,
             .component.measures[] | select(.metric=="coverage") .value,
             .component.measures[] | select(.metric=="code_smells") .value,
             .component.measures[] | select(.metric=="duplicated_lines_density") .value,
             .component.measures[] | select(.metric=="ncloc") .value] 
            | @csv' >> "$CSV_FILE"

          echo "✅ CSV report generated: $CSV_FILE"

      - name: Upload Artifacts
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: sonar-quality-reports-${{ github.run_number }}
          path: |
            reports/team-dashboard/
            reports/exports/

      - name: Final Summary
        if: always()
        run: |
          echo "### ✅ Final Quality Summary" >> $GITHUB_STEP_SUMMARY
          echo "| Metric | Value |" >> $GITHUB_STEP_SUMMARY
          echo "|--------|-------|" >> $GITHUB_STEP_SUMMARY
          cat reports/exports/latest_export.csv | tail -n 1 | awk -F',' '{
            print "| Bugs | "$3" |"
            print "| Vulnerabilities | "$4" |"
            print "| Coverage | "$5"% |"
            print "| Code Smells | "$6" |"
            print "| Duplications | "$7"% |"
            print "| Lines of Code | "$8" |"
          }' >> $GITHUB_STEP_SUMMARY
